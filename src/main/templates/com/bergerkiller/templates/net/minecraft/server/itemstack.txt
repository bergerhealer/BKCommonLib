package net.minecraft.server;

import com.bergerkiller.bukkit.common.nbt.CommonTagCompound;
import com.bergerkiller.generated.net.minecraft.server.ItemStackHandle;
import com.bergerkiller.generated.net.minecraft.server.IBlockDataHandle;
import com.bergerkiller.generated.net.minecraft.server.RecipesFurnaceHandle;
import com.bergerkiller.bukkit.common.wrappers.ChatText;

class ItemStack {
#if version >= 1.11
    public optional static final (ItemStackHandle) ItemStack OPT_EMPTY_ITEM:a;
#else
    public optional static final (ItemStackHandle) ItemStack OPT_EMPTY_ITEM:###;
#endif

    private int amountField:count;
    private (org.bukkit.Material) Item typeField:item;
    private (com.bergerkiller.bukkit.common.nbt.CommonTagCompound) NBTTagCompound tagField:tag;

#if version >= 1.13
    private optional int durabilityField:###;
#else
    private optional int durabilityField:damage;
#endif

    <code>
    public static final ItemStackHandle EMPTY_ITEM;
    static {
        // On 1.11.2, an empty item constant is used. <= 1.9, null is used.
        if (T.OPT_EMPTY_ITEM.isAvailable()) {
            EMPTY_ITEM = T.OPT_EMPTY_ITEM.get();
        } else {
            EMPTY_ITEM = T.createHandle(null, true);
        }
    }
    </code>

    // available since MC 1.11
    public optional boolean isEmpty();

    // Create a default ItemStack with type STONE amount 1
    public static (ItemStackHandle) ItemStack newInstance() {
#if version >= 1.13
        return new ItemStack(Blocks.STONE, 1);
#elseif version >= 1.11.2
        return new ItemStack(Item.getItemOf(Blocks.STONE), 1, 0, false);
#else
        return new ItemStack(Blocks.STONE, 1, 0);
#endif
    }

    public static (ItemStackHandle) ItemStack fromBlockData((IBlockDataHandle) IBlockData data, int amount) {
#if version >= 1.13
        return new ItemStack(data.getBlock(), amount);
#else
        return new ItemStack(data.getBlock(), amount, data.getBlock().getDropData(data));
#endif
    }

    public (Object) Item getItem();

#if version >= 1.13
    public (ChatText) IChatBaseComponent getName();
    public (void) ItemStack setName:a((ChatText) IChatBaseComponent name);
#else
    public (ChatText) String getName();

    #if version >= 1.11
        public (void) ItemStack setName:g((ChatText) String name);
    #else
        public (void) ItemStack setName:c((ChatText) String name);
    #endif
#endif


#if version >= 1.13
    public optional void setDamage_1_13:setDamage(int durability);
#else
    public optional void setDamage_1_13:###(int durability);
#endif

    <code>
    public void setDurability(int durability) {
        if (T.setDamage_1_13.isAvailable()) {
            // Only set when durability > 0 or a tag exists
            // This prevents creating a NBT tag for storing durability 0
            if (durability > 0 || getTag() != null) {
                T.setDamage_1_13.invoke(getRaw(), durability);
            }
        } else {
            T.durabilityField.setInteger(getRaw(), durability);
        }
    }
    </code>


    public int getRepairCost();

    public void setRepairCost(int cost);

    public boolean hasName();

    public boolean hasTag();

    public (CommonTagCompound) NBTTagCompound getTag();

    public (CommonTagCompound) NBTTagCompound saveToNBT:save((CommonTagCompound) NBTTagCompound compound);

#if version >= 1.8.8
    public (ItemStackHandle) ItemStack cloneAndSubtract(int n);
#else
    public (ItemStackHandle) ItemStack cloneAndSubtract:a(int n);
#endif

    public (ItemStackHandle) ItemStack cloneItemStack();

    public org.bukkit.inventory.ItemStack toBukkit() {
        return org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(instance);
    }

    <code>
    public static ItemStackHandle fromBukkit(org.bukkit.inventory.ItemStack itemStack) {
        if (itemStack == null) {
            return null;
        } else {
            return createHandle(com.bergerkiller.bukkit.common.conversion.type.HandleConversion.toItemStackHandle(itemStack));
        }
    }
    </code>
}

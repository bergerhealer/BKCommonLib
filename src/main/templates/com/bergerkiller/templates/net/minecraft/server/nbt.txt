package net.minecraft.server;

import com.bergerkiller.generated.net.minecraft.server.NBTBaseHandle;

class NBTBase {
    public abstract byte getTypeId();
    public abstract (NBTBaseHandle) NBTBase clone();
}

class NBTTagList extends NBTBase {
    private (List<NBTBaseHandle>) List<NBTBase> list;
    private byte type;

#if version >= 1.13
    public boolean add((NBTBaseHandle) NBTBase value);
#else
    public boolean add((NBTBaseHandle) NBTBase value) {
        instance.add(value);
        return true; // Normally false when value is not compatible
    }
#endif

    public int size();

#if version >= 1.13
    public (NBTBaseHandle) NBTBase get:c(int index);
#elseif version >= 1.12
    public (NBTBaseHandle) NBTBase get:i(int index);
#elseif version >= 1.9
    public (NBTBaseHandle) NBTBase get:h(int index);
#else
    public (NBTBaseHandle) NBTBase get:g(int index);
#endif
}

class NBTTagCompound extends NBTBase {
    private final (Map<String, NBTBaseHandle>) Map<String, NBTBase> map;

#if version >= 1.13
    public Set<String> getKeys();
#else
    public Set<String> getKeys:c();
#endif

    public void remove(String key);
    public void set(String key, (NBTBaseHandle) NBTBase value);
    public (NBTBaseHandle) NBTBase get(String key);
    public boolean contains:hasKey(String key);
    public boolean isEmpty();

    <code>
    public int size() {
        return ((java.util.Map<?, ?>) T.map.raw.get(getRaw())).size();
    }
    </code>
}
